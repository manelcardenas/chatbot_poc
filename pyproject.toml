[project]
name = "chatbot-poc"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "langchain-core==0.3.33",
    "langchain-openai==0.3.3",
    "langgraph==0.2.69",
    "matplotlib==3.10.0",
    "openai==1.61.1",
    "colorama==0.4.6",
    "python-dotenv==1.0.1",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.1.6",
]

# Ruff - fast linter and formatter
[tool.ruff]
line-length = 120
target-version = "py311"

# Linting configuration
[tool.ruff.lint]
# Select errors and warnings to enable
select = [
    # Code quality
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "C90",  # Mccabe complexity
    
    # Code style
    "I",    # isort
    "N",    # PEP8 naming conventions
    "D",    # pydocstyle
    
    # Static analysis
    "S",    # flake8-bandit (security)
    "ARG",  # flake8-unused-arguments
    "SIM",  # flake8-simplify
    
    # Type checking
    "ANN",  # type annotations

    # Modern Python
    "UP",   # pyupgrade, updates code to latest Python version
    "RUF",  # ruff-specific rules
    "PT",   # pytest style
    "ICN",  # import-cost
]
# Errors to ignore
ignore = [
    "C901",  # too complex (handled by mccabe)
    "W191",  # indentation contains tabs
    "D401",  # imperative mood
    "E501",  # line too long (handled by line-length)
    "D100",  # missing docstring in public module
    "D104",  # missing docstring in private module
]
# Exclude files/directories
exclude = [
    ".git",
    ".ruff_cache",
    "__pycache__",
    "build",
    "dist",
    "test",
]

# Pydocstyle settings
[tool.ruff.lint.pydocstyle]
convention = "google"